{"remainingRequest":"/home/encima/.nvm/versions/node/v11.0.0/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/encima/dev/uzh/shared-components/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/encima/.nvm/versions/node/v11.0.0/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/encima/dev/uzh/shared-components/src/components/RegisterForm.vue?vue&type=template&id=6626deb7&","dependencies":[{"path":"/home/encima/dev/uzh/shared-components/src/components/RegisterForm.vue","mtime":1573386383384},{"path":"/home/encima/.nvm/versions/node/v11.0.0/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/encima/.nvm/versions/node/v11.0.0/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/encima/dev/uzh/shared-components/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/encima/.nvm/versions/node/v11.0.0/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}
{"remainingRequest":"/home/encima/.nvm/versions/node/v11.0.0/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/encima/dev/uzh/shared-components/src/components/GrowingTextarea.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/encima/dev/uzh/shared-components/src/components/GrowingTextarea.vue","mtime":1573386383384},{"path":"/home/encima/.nvm/versions/node/v11.0.0/lib/node_modules/@vue/cli-service-global/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/encima/.nvm/versions/node/v11.0.0/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/encima/dev/uzh/shared-components/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/encima/.nvm/versions/node/v11.0.0/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/encima/.nvm/versions/node/v11.0.0/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmdyb3dpbmctdGV4dGFyZWEgewogICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgc3BhbiB7CiAgICAgICAgcG9zaXRpb246IGFic29sdXRlOwogICAgICAgIGxlZnQ6IDA7CiAgICAgICAgdG9wOiAwOwogICAgICAgIHZpc2liaWxpdHk6IGhpZGRlbjsKICAgICAgICBkaXNwbGF5OiBibG9jazsKICAgICAgICBsaW5lLWhlaWdodDogMS41OwogICAgfQp9Cg=="},{"version":3,"sources":["GrowingTextarea.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GrowingTextarea.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"growing-textarea\">\n        <textarea ref=\"textarea\" :placeholder=\"placeholder\" v-model=\"inputValue\" :style=\"styleObject\"></textarea>\n        <span ref=\"text\">Joghurt</span>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: \"GrowingTextarea\",\n        data() {\n            return {\n                inputValue: '',\n                firstHeight: null,\n                lineHeight: null,\n                padding: null,\n                numberOfLines: 1,\n                styleObject: null\n            }\n        },\n        props: {\n            placeholder: String,\n            value: String,\n            fat: Boolean\n        },\n        mounted() {\n            this.firstHeight = this.$refs.textarea.offsetHeight;\n            this.padding = this.firstHeight - this.$refs.text.offsetHeight;\n            this.lineHeight = this.firstHeight - this.padding;\n\n            if( this.fat ) {\n                this.styleObject = {'font-weight':'700'};\n            }\n        },\n        watch: {\n            inputValue() {\n                this.$emit('input', this.inputValue);\n\n                this.$refs.textarea.style.height = (this.lineHeight + this.padding)+'px';\n            },\n            value() {\n                this.inputValue = this.value;\n\n                this.numberOfLines = Math.floor( this.$refs.textarea.scrollHeight / this.lineHeight );\n                this.$refs.textarea.style.height = (this.numberOfLines * this.lineHeight + this.padding)+'px';\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\">\n    .growing-textarea {\n        position: relative;\n        span {\n            position: absolute;\n            left: 0;\n            top: 0;\n            visibility: hidden;\n            display: block;\n            line-height: 1.5;\n        }\n    }\n</style>\n"]}]}
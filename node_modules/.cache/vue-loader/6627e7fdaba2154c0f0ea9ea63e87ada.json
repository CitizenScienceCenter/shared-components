{"remainingRequest":"/home/encima/.nvm/versions/node/v11.0.0/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/encima/dev/uzh/shared-components/src/components/Comments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/encima/dev/uzh/shared-components/src/components/Comments.vue","mtime":1573386383380},{"path":"/home/encima/.nvm/versions/node/v11.0.0/lib/node_modules/@vue/cli-service-global/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/encima/.nvm/versions/node/v11.0.0/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/encima/.nvm/versions/node/v11.0.0/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Comments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqIA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA","file":"Comments.vue","sourceRoot":"src/components","sourcesContent":["<i18n>\n    {\n\n    \"en\": {\n\n    \"newtopic-heading\": \"Start a new Topic\",\n    \"newtopic-title-placeholder\": \"Topic Title\",\n    \"newtopic-text-placeholder\": \"What's on your mind?\",\n    \"newtopic-button\": \"Send\",\n\n    \"login-text\": \"You need to be logged in to write something.\",\n    \"login-button\": \"Login\",\n\n    \"reply-button\": \"Reply\",\n    \"reply-placeholder\": \"Reply\",\n\n    \"more-replies-button\": \"Show More Replies\",\n    \"more-comments-button\": \"Show More Comments\"\n\n    },\n    \"de\": {\n\n    \"newtopic-heading\": \"Starte ein neues Thema\",\n    \"newtopic-title-placeholder\": \"Titel\",\n    \"newtopic-text-placeholder\": \"Was liegt dir auf dem Herzen?\",\n    \"newtopic-button\": \"Senden\",\n\n    \"login-text\": \"Du musst eingeloggt sein um etwas zu schreiben.\",\n    \"login-button\": \"Anmelden\",\n\n    \"reply-button\": \"Antworten\",\n    \"reply-placeholder\": \"Antwort\",\n\n\n    \"more-replies-button\": \"Mehr Antworten zeigen\",\n    \"more-comments-button\": \"Mehr Kommentare zeigen\"\n\n    }\n\n    }\n</i18n>\n\n<template>\n    <div class=\"comments\">\n\n        <template v-if=\"!user.isAnon\">\n\n            <h3 class=\"subheading\">{{ $t('newtopic-heading') }}</h3>\n\n            <div class=\"comment\">\n\n                <user-avatar class=\"avatar\" :username=\"user.currentUser.username\"></user-avatar>\n\n                <div class=\"form-field\">\n                    <growing-textarea v-model=\"commentTitle\" :placeholder=\"$t('newtopic-title-placeholder')\" fat></growing-textarea>\n                </div>\n                <div class=\"form-field\">\n                    <growing-textarea v-model=\"commentText\" :placeholder=\"$t('newtopic-text-placeholder')\"></growing-textarea>\n                </div>\n\n                <div class=\"button-group right-aligned\">\n                    <button :disabled=\"commentTitle === '' || commentText === ''\" class=\"button button-primary\" @click=\"newComment()\">{{ $t('newtopic-button') }}</button>\n                </div>\n\n            </div>\n\n        </template>\n        <template v-else>\n\n            <p>{{ $t('login-text') }}</p>\n            <router-link tag=\"button\" to=\"/login\" class=\"button button-primary\">{{ $t('login-button') }}</router-link>\n\n        </template>\n\n        <ul v-if=\"treeSituation.length > 0\" class=\"comment-list\">\n            <li v-if=\"index < topicsShown\" v-for=\"(situation,index) in treeSituation\">\n\n                <div class=\"comment comment-existing withTitles\">\n\n                    <user-avatar class=\"avatar\" :username=\"commentTree[index][0].username\"></user-avatar>\n\n                    <h3 class=\"subheading\">{{ commentTree[index][0].content.title }}</h3>\n                    <p>{{ commentTree[index][0].content.text }}</p>\n                    <span class=\"date\">{{ giveDateTime(commentTree[index][0].comment_created) }}</span>\n                    <span class=\"username\">by {{ commentTree[index][0].username }}</span>\n\n                    <template v-if=\"!user.isAnon\">\n                        <div v-if=\"!situation[1]\" class=\"button-group right-aligned\">\n                            <button @click.prevent=\"showReplyField(index)\" class=\"button button-secondary button-secondary-naked\">{{ $t('reply-button') }}</button>\n                        </div>\n                        <div v-else class=\"comment reply\">\n                            <user-avatar class=\"avatar\" :username=\"user.currentUser.username\"></user-avatar>\n\n                            <div class=\"form-field\">\n                                <growing-textarea v-model=\"replyTexts[index]\" :placeholder=\"$t('reply-placeholder')\"></growing-textarea>\n                            </div>\n                            <div class=\"button-group right-aligned\">\n                                <button :disabled=\"replyTexts[index].length === 0\" class=\"button button-primary\" @click=\"newComment(commentTree[index][0].comment_id, index)\">{{ $t('reply-button') }}</button>\n                            </div>\n                        </div>\n                    </template>\n\n                    <div class=\"replies\" v-if=\"commentTree[index][1].length > 0\">\n\n                        <ul class=\"reply-list\">\n\n                            <li v-if=\"replyIndex < situation[0]\" v-for=\"(reply,replyIndex) in commentTree[index][1]\">\n                                <div class=\"comment comment-existing\">\n                                    <user-avatar class=\"avatar\" :username=\"reply.username\"></user-avatar>\n                                    <p>{{ reply.content.text }}</p>\n                                    <span class=\"date\">{{ giveDateTime(reply.comment_created) }}</span>\n                                    <span class=\"username\">by {{ reply.username }}</span>\n                                </div>\n                            </li>\n\n                        </ul>\n                        <div v-if=\"commentTree[index][1].length > situation[0]\" class=\"button-group\">\n                            <button @click.prevent=\"expand(index)\" class=\"button button-secondary button-secondary-naked\">{{ $t('more-replies-button') }}</button>\n                        </div>\n                    </div>\n\n                </div>\n            </li>\n        </ul>\n        <div v-if=\"commentTree.length > topicsShown\" class=\"button-group\">\n            <button @click.prevent=\"showMore()\" class=\"button button-secondary\">{{ $t('more-comments-button') }}</button>\n        </div>\n\n    </div>\n</template>\n\n<script>\n\n    import {mapState} from 'vuex'\n    import GrowingTextarea from \"./GrowingTextarea\";\n    import UserAvatar from \"./UserAvatar\";\n\n\n    export default {\n        name: \"Comments\",\n        components: {\n            GrowingTextarea,\n            UserAvatar\n        },\n        data() {\n            return {\n                commentTree: [],\n                treeSituation: [],\n                newSituationOnLoad: true,\n                topicsShown: 5,\n                repliesShownDefault: 2,\n                replySubmitted: null,\n\n                commentTitle: '',\n                commentText: '',\n                replyTexts: []\n            }\n        },\n        props: {\n            sourceId: {\n              type: String,\n              default: null\n            }\n        },\n        watch: {\n            sourceId: function() {\n                this.loadComments();\n            }\n        },\n        computed: {\n            ...mapState({\n                user: state => state.c3s.user,\n                comments: state => state.c3s.comments.comments,\n\n                loading: state => state.c3s.settings.loading\n            })\n        },\n        mounted: function() {\n            this.loadComments();\n        },\n        methods: {\n            loadComments: function() {\n\n                let query = {\n                    'select': {\n                        'fields': [\n                            'comments.id as comment_id',\n                            'comments.created_at as comment_created',\n                            '*'\n                        ],\n                        'tables': [\n                            'comments'\n                        ],\n                        'orderBy': {\n                            'comment_created': 'DESC'\n                        }\n                    },\n                    \"join\": {\n                        \"type\": \"LEFT\",\n                        \"conditions\":{\n                            \"from\": {\n                                \"table\": \"users\",\n                                \"field\": \"id\"\n                            },\n                            \"to\": {\n                                \"table\": \"comments\",\n                                \"field\": \"user_id\"\n                            }\n                        }\n                    },\n                    'where': [\n                        {\n                            \"field\": 'source_id',\n                            'op': 'e',\n                            'val': this.sourceId\n                        }\n                    ]\n                };\n\n                this.$store.dispatch('c3s/media/getMedia', [query, 'c3s/comments/SET_COMMENTS', 9999] ).then(res => {\n\n                    this.commentTitle = '';\n                    this.commentText = '';\n                    //console.log('comments loaded:');\n                    this.buildCommentTree();\n                    //console.log( this.commentTree );\n\n                });\n            },\n            buildCommentTree() {\n\n                if( this.newSituationOnLoad ) {\n                    this.treeSituation = [];\n                    this.replyTexts = [];\n                }\n\n                //console.log('build tree');\n                this.commentTree = [];\n                var unfoundChildren = [];\n\n                for( let i = 0; i < this.comments.length; i++ ) {\n\n                    //console.log('comment check');\n\n                    if( this.comments[i].parent === null ) {\n\n                        //console.log('has no parent');\n\n                        this.commentTree.push( [ this.comments[i], [] ] );\n\n                        if( this.newSituationOnLoad ) {\n                            this.treeSituation.push( [ this.repliesShownDefault, false ] );\n                            this.replyTexts.push( '' );\n                        }\n                        if( this.replySubmitted != null ) {\n                            this.replyTexts[this.replySubmitted] = '';\n                            this.replySubmitted = null;\n                        }\n                    }\n                    else {\n\n                        //console.log('has parent');\n                        var parentFound = false;\n\n                        for( let j = 0; j < this.commentTree.length; j++ ) {\n\n                            if( this.comments[i].parent === this.commentTree[j][0].comment_id ) {\n                                this.addChildToTree( j, this.comments[i] );\n                                parentFound = true;\n                            }\n                        }\n\n                        if( !parentFound ) {\n                            //console.log('parent not found');\n                            unfoundChildren.unshift( this.comments[i] );\n                        }\n                    }\n                }\n\n                for( let i = unfoundChildren.length-1; i >= 0; i-- ) {\n\n                    //console.log('lost child');\n\n                    for( let j = 0; j < this.commentTree.length; j++ ) {\n                        if( unfoundChildren[i].parent === this.commentTree[j][0].comment_id ) {\n                            this.addChildToTree( j, unfoundChildren[i] );\n                            break;\n                        }\n                    }\n\n                }\n                //console.log('comment tree generated');\n                //console.log('reply texts');\n                //console.log( this.replyTexts );\n            },\n            addChildToTree( parentIndex, child ) {\n                //console.log('parent found');\n                this.commentTree[parentIndex][1].push( child );\n            },\n            giveDateTime(timestamp) {\n                var date = new Date(timestamp);\n                var date_time =  date.getDate() +'.'+ (date.getMonth()+1) +'.'+ date.getFullYear()+', '+ date.getHours() +':'+ (date.getMinutes()<10?'0':'') + date.getMinutes();\n                //console.log( date_time );\n                return date_time;\n            },\n            showMore() {\n                this.topicsShown += 10;\n            },\n            expand(index) {\n                this.treeSituation[index][0] += 10;\n\n                this.treeSituation.push( ['dummy object'] );\n                this.treeSituation.pop();\n\n                //console.log( 'expand');\n                //console.log( this.treeSituation );\n            },\n            showReplyField(index) {\n                this.treeSituation[index][1] = true;\n\n                this.treeSituation.push( ['dummy object'] );\n                this.treeSituation.pop();\n\n                //console.log( 'show');\n                //console.log( this.treeSituation );\n            },\n            newComment: function(parentId, index) {\n\n\n                //console.log('new comment');\n\n                let comment;\n                if( !parentId && !index ) {\n                    this.newSituationOnLoad = true;\n\n                    this.opened = [];\n                    //console.log('no parent');\n\n                    comment = {\n                        user_id: this.user.currentUser.id,\n                        source_id: this.sourceId,\n                        content: {\n                            title: this.commentTitle,\n                            text: this.commentText\n                        }\n                    };\n                }\n                else {\n                    this.newSituationOnLoad = false;\n                    this.replySubmitted = index;\n\n                    comment = {\n                        user_id: this.user.currentUser.id,\n                        source_id: this.sourceId,\n                        parent: parentId,\n                        content: {\n                            text: this.replyTexts[index]\n                        }\n                    };\n                }\n\n                //console.log('create: '+ parentId);\n\n                this.$store.dispatch('c3s/comments/createComment', comment).then(res => {\n\n                    //console.log('new comment created');\n\n                    this.loadComments();\n\n                });\n            }\n        }\n    }\n\n</script>\n\n<style lang=\"scss\">\n\n    @import '@/styles/theme.scss';\n    @import '@/styles/shared/variables.scss';\n\n\n    .comments {\n\n\n        min-height: 50vh;\n\n\n        .button-secondary-naked {\n            padding: 0;\n        }\n\n\n        ul {\n            li {\n                padding-left: 0;\n                margin-left: 0;\n                &:before {\n                    display: none;\n                }\n            }\n        }\n\n\n        .form-field {\n            display: block;\n\n            margin-bottom: $spacing-2;\n        }\n\n        .comment {\n            position: relative;\n            padding-left: calc(40px + #{$spacing-2});\n\n\n            .avatar {\n                position: absolute;\n                top: 0;\n                left: 0;\n                pointer-events: none;\n            }\n\n            p, .subheading {\n                white-space: pre-line;\n            }\n\n\n        }\n        .comment-list {\n            margin-top: $spacing-5;\n            margin-bottom: $spacing-3;\n\n            li {\n                margin-bottom: $spacing-4;\n\n                .comment {\n\n                    &.comment-existing {\n                        padding-top: calc((40px - #{$font-size-normal} * 1.5) / 2);\n                        min-height: 40px;\n                        &.titled {\n                            padding-top: calc((40px - #{$font-size-medium} * 1.5) / 2);\n                        }\n                    }\n\n                    .subheading {\n                        margin-bottom: $spacing-1;\n                    }\n                    p {\n                        margin-bottom: 0;\n                    }\n                    .date, .username {\n                        font-size: $font-size-small;\n                        color: $color-black-tint-50;\n                        display: inline;\n\n                        &.username {\n                            margin-left: $spacing-1;\n                        }\n                    }\n\n                    .reply {\n                        margin-top: $spacing-3;\n                    }\n\n                    .replies {\n                        margin-top: $spacing-1;\n\n                        .reply-list {\n                            margin: 0;\n\n                            li {\n                                margin-bottom: $spacing-2;\n                            }\n                        }\n                    }\n\n                }\n\n            }\n\n        }\n    }\n\n    @media only screen and (min-width: $viewport-tablet-portrait) {\n\n        .comments {\n\n            .comment {\n                padding-left: calc( 48px + #{$spacing-3} );\n            }\n\n            .comment-list {\n                margin-top: $spacing-6;\n                margin-bottom: $spacing-4;\n\n                li {\n                    margin-bottom: $spacing-5;\n\n                    .comment {\n\n                        &.comment-existing {\n                            padding-top: calc((48px - #{$font-size-normal} * 1.5) / 2);\n                            min-height: 48px;\n                            &.titled {\n                                padding-top: calc((48px - #{$font-size-medium} * 1.5) / 2);\n                            }\n                        }\n\n                        .subheading {\n                            margin-bottom: $spacing-2;\n                        }\n\n                        .reply {\n                            margin-top: $spacing-4;\n                        }\n\n\n                        .replies {\n                            margin-top: $spacing-2;\n\n                            .reply-list {\n                                margin: 0;\n\n                                li {\n                                    margin-bottom: $spacing-3;\n                                }\n                            }\n                        }\n\n                    }\n\n                }\n\n\n            }\n        }\n\n    }\n\n</style>\n"]}]}